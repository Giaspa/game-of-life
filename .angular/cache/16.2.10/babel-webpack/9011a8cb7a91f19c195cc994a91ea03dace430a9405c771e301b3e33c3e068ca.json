{"ast":null,"code":"import { GolModalComponent } from '../gol-modal/gol-modal.component';\nimport { Utilities } from 'src/app/utilities';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/grid.service\";\nimport * as i2 from \"src/app/services/settings.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../gol-modal/gol-modal.component\";\nfunction GolPatternComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function GolPatternComponent_div_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n      const _r1 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(_r1.open());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 10);\n    i0.ɵɵelement(2, \"path\", 11);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let GolPatternComponent = /*#__PURE__*/(() => {\n  class GolPatternComponent {\n    constructor(gridService, settingsService) {\n      this.gridService = gridService;\n      this.settingsService = settingsService;\n    }\n    openPattern(pattern) {\n      console.log(\"OPEN PATTERN\", pattern);\n      const ROWS = this.settingsService.getRows();\n      const MATRIX_NxN = Utilities.getMatrixNxN(ROWS);\n      const CENTER_CELL = this.gridService.getCell(MATRIX_NxN[ROWS / 2][ROWS / 2]);\n      let aliveArray = [];\n      const getIdByDirection = (centralCellId, direction) => {\n        switch (direction) {\n          case 'NO':\n            return this.gridService.getCell(centralCellId).siblings[0];\n          case 'N':\n            return this.gridService.getCell(centralCellId).siblings[1];\n          case 'NE':\n            return this.gridService.getCell(centralCellId).siblings[2];\n          case 'O':\n            return this.gridService.getCell(centralCellId).siblings[3];\n          case 'E':\n            return this.gridService.getCell(centralCellId).siblings[4];\n          case 'SO':\n            return this.gridService.getCell(centralCellId).siblings[5];\n          case 'S':\n            return this.gridService.getCell(centralCellId).siblings[6];\n          case 'SE':\n            return this.gridService.getCell(centralCellId).siblings[7];\n        }\n      };\n      let x1y4, x1y5, x1y6, x1y7, x1y8;\n      let x2y3, x2y4, x2y5, x2y6, x2y7, x2y8;\n      let x3y1, x3y2, x3y5, x3y6, x3y7, x3y8, x3y9;\n      let x4y1, x4y2, x4y3, x4y4, x4y5, x4y6, x4y9;\n      let x5y1, x5y2, x5y5, x5y6, x5y7, x5y9;\n      let x6y2, x6y3, x6y4, x6y5, x6y7, x6y9;\n      let x7y1, x7y4, x7y5, x7y6, x7y8, x7y9;\n      let x8y4, x8y5, x8y6, x8y7, x8y8;\n      switch (pattern) {\n        case 'heart':\n          x4y1 = getIdByDirection(getIdByDirection(getIdByDirection(CENTER_CELL.id, 'S'), 'S'), 'S');\n          x3y2 = getIdByDirection(x4y1, 'NO');\n          x2y3 = getIdByDirection(x3y2, 'NO');\n          x1y4 = getIdByDirection(x2y3, 'NO');\n          x1y5 = getIdByDirection(x1y4, 'N');\n          x1y6 = getIdByDirection(x1y5, 'N');\n          x2y7 = getIdByDirection(x1y6, 'NE');\n          x3y7 = getIdByDirection(x2y7, 'E');\n          x4y6 = getIdByDirection(x3y7, 'SE');\n          x5y7 = getIdByDirection(x4y6, 'NE');\n          x6y7 = getIdByDirection(x5y7, 'E');\n          x7y6 = getIdByDirection(x6y7, 'SE');\n          x7y5 = getIdByDirection(x7y6, 'S');\n          x7y4 = getIdByDirection(x7y5, 'S');\n          x6y3 = getIdByDirection(x7y4, 'SO');\n          x5y2 = getIdByDirection(x6y3, 'SO');\n          aliveArray = [x4y1, x3y2, x2y3, x1y4, x1y5, x1y6, x2y7, x3y7, x4y6, x5y7, x6y7, x7y6, x7y5, x7y4, x6y3, x5y2];\n          break;\n        case 'cat':\n          x4y5 = CENTER_CELL.id;\n          x3y5 = getIdByDirection(x4y5, 'O');\n          x3y6 = getIdByDirection(x3y5, 'N');\n          x3y7 = getIdByDirection(x3y6, 'N');\n          x3y8 = getIdByDirection(x3y7, 'N');\n          x2y7 = getIdByDirection(x3y8, 'SO');\n          x1y8 = getIdByDirection(x2y7, 'NO');\n          x1y7 = getIdByDirection(x2y7, 'O');\n          x1y6 = getIdByDirection(x2y7, 'SO');\n          x2y6 = getIdByDirection(x2y7, 'S');\n          x2y5 = getIdByDirection(x2y6, 'S');\n          x2y4 = getIdByDirection(x2y5, 'S');\n          x2y3 = getIdByDirection(x2y4, 'S');\n          x3y1 = getIdByDirection(x2y3, 'SE');\n          x4y3 = getIdByDirection(x3y1, 'NE');\n          x5y2 = getIdByDirection(x4y3, 'SE');\n          x6y3 = getIdByDirection(x5y2, 'NE');\n          x6y4 = getIdByDirection(x6y3, 'N');\n          x6y5 = getIdByDirection(x6y4, 'N');\n          x5y6 = getIdByDirection(x6y5, 'O');\n          x7y6 = getIdByDirection(x6y5, 'NE');\n          x8y7 = getIdByDirection(x7y6, 'NE');\n          x7y8 = getIdByDirection(x8y7, 'NO');\n          aliveArray = [x4y5, x3y5, x3y6, x3y7, x3y8, x2y7, x1y8, x1y7, x1y6, x2y6, x2y5, x2y4, x2y3, x3y1, x4y3, x5y2, x6y3, x6y4, x6y5, x5y6, x7y6, x8y7, x7y8];\n          break;\n        case 'tree':\n          x5y5 = CENTER_CELL.id;\n          x4y5 = getIdByDirection(x5y5, 'O');\n          x3y5 = getIdByDirection(x4y5, 'O');\n          x2y4 = getIdByDirection(x3y5, 'SO');\n          x1y5 = getIdByDirection(x2y4, 'NO');\n          x1y6 = getIdByDirection(x1y5, 'N');\n          x1y7 = getIdByDirection(x1y6, 'N');\n          x2y8 = getIdByDirection(x1y7, 'NE');\n          x3y9 = getIdByDirection(x2y8, 'NE');\n          x4y9 = getIdByDirection(x3y9, 'E');\n          x5y9 = getIdByDirection(x4y9, 'E');\n          x6y9 = getIdByDirection(x5y9, 'E');\n          x7y9 = getIdByDirection(x6y9, 'E');\n          x8y8 = getIdByDirection(x7y9, 'SE');\n          x8y7 = getIdByDirection(x8y8, 'SE');\n          x8y6 = getIdByDirection(x8y7, 'S');\n          x8y5 = getIdByDirection(x8y6, 'S');\n          x8y4 = getIdByDirection(x8y5, 'SO');\n          x7y5 = getIdByDirection(x8y4, 'NO');\n          x6y5 = getIdByDirection(x7y5, 'O');\n          x6y4 = getIdByDirection(x6y5, 'S');\n          x6y3 = getIdByDirection(x6y4, 'S');\n          x6y2 = getIdByDirection(x6y3, 'S');\n          x7y1 = getIdByDirection(x6y2, 'SE');\n          x5y1 = getIdByDirection(x6y2, 'SO');\n          x4y2 = getIdByDirection(x5y1, 'NO');\n          x3y1 = getIdByDirection(x4y2, 'SO');\n          x4y3 = getIdByDirection(x4y2, 'N');\n          x4y4 = getIdByDirection(x4y3, 'N');\n          aliveArray = [x4y5, x3y5, x2y4, x1y5, x1y6, x1y7, x2y8, x3y9, x4y9, x5y9, x6y9, x7y9, x8y8, x8y7, x8y6, x8y5, x8y4, x7y5, x6y5, x6y4, x6y3, x6y2, x7y1, x5y1, x4y2, x3y1, x4y3, x4y4];\n          break;\n      }\n      aliveArray.forEach(coord => {\n        this.gridService.getCell(coord).isAlive = true;\n      });\n      this.modal.close();\n    }\n    static #_ = this.ɵfac = function GolPatternComponent_Factory(t) {\n      return new (t || GolPatternComponent)(i0.ɵɵdirectiveInject(i1.GridService), i0.ɵɵdirectiveInject(i2.SettingsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GolPatternComponent,\n      selectors: [[\"gol-pattern\"]],\n      viewQuery: function GolPatternComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(GolModalComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n        }\n      },\n      decls: 22,\n      vars: 1,\n      consts: [[\"class\", \"pattern__button\", 3, \"click\", 4, \"ngIf\"], [\"modal\", \"\"], [\"header\", \"\"], [\"body\", \"\"], [1, \"pattern__body\"], [1, \"pattern__body--section\"], [\"src\", \"../../../assets/heart-pattern.png\", \"alt\", \"heart-pattern\", 3, \"click\"], [\"src\", \"../../../assets/cat-pattern.png\", \"alt\", \"cat-pattern\", 3, \"click\"], [\"src\", \"../../../assets/tree-pattern.png\", \"alt\", \"tree-pattern\", 3, \"click\"], [1, \"pattern__button\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"3em\", \"viewBox\", \"0 0 576 512\"], [\"d\", \"M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z\"]],\n      template: function GolPatternComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, GolPatternComponent_div_0_Template, 3, 0, \"div\", 0);\n          i0.ɵɵelementStart(1, \"gol-modal\", null, 1);\n          i0.ɵɵelementContainerStart(3, 2);\n          i0.ɵɵelementStart(4, \"h2\");\n          i0.ɵɵtext(5, \"Initial pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(6, 3);\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Create an initial pattern by clicking on the cells, otherwise select a default pattern:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"h3\");\n          i0.ɵɵtext(12, \"Heart pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"img\", 6);\n          i0.ɵɵlistener(\"click\", function GolPatternComponent_Template_img_click_13_listener() {\n            return ctx.openPattern(\"heart\");\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 5)(15, \"h3\");\n          i0.ɵɵtext(16, \"Cat pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"img\", 7);\n          i0.ɵɵlistener(\"click\", function GolPatternComponent_Template_img_click_17_listener() {\n            return ctx.openPattern(\"cat\");\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 5)(19, \"h3\");\n          i0.ɵɵtext(20, \"Tree pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"img\", 8);\n          i0.ɵɵlistener(\"click\", function GolPatternComponent_Template_img_click_21_listener() {\n            return ctx.openPattern(\"tree\");\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.gridService.gridIsEmpty());\n        }\n      },\n      dependencies: [i3.NgIf, i4.GolModalComponent],\n      styles: [\"[_ngcontent-%COMP%]:root{--dark-blue: #162F3F}div.pattern__button[_ngcontent-%COMP%]{position:relative;height:80px;width:80px;border-radius:40px;background-color:#47682d;animation:_ngcontent-%COMP%_pulse 3s infinite;display:flex;justify-content:center;align-items:center;padding-bottom:2px;cursor:pointer}div.pattern__button[_ngcontent-%COMP%] > svg[_ngcontent-%COMP%]{fill:#c7d6d0}div.pattern__body[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px;width:100%;min-width:250px}div.pattern__body[_ngcontent-%COMP%] > .pattern__body--section[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:0 12px}div.pattern__body[_ngcontent-%COMP%] > .pattern__body--section[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:80px;aspect-ratio:1}@keyframes _ngcontent-%COMP%_pulse{0%{transform:scale(.95);box-shadow:5px 5px 10px 5px #17304080,-5px -5px 10px 5px #9b9b9b80}70%{transform:scale(1);box-shadow:5px 5px 10px 15px #17304000,-5px -5px 10px 15px #c7d6d000}to{transform:scale(.95);box-shadow:5px 5px 10px 5px #17304000,-5px -5px 10px 5px #c7d6d000}}\"]\n    });\n  }\n  return GolPatternComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}