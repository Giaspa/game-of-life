{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GridService {\n  constructor() {\n    this.cells = [];\n    this.cellsUpdated = new EventEmitter();\n  }\n  getCells() {\n    return this.cells;\n  }\n  setCells(cells) {\n    this.cells = cells;\n    this.cellsUpdated.emit(cells);\n  }\n  getCell(idCell) {\n    return this.cells[idCell - 1];\n  }\n  resetCells() {\n    this.cells.forEach(cell => {\n      cell.isAlive = false;\n    });\n  }\n  gridIsEmpty() {\n    return this.cells.every(cell => !cell.isAlive);\n  }\n  static #_ = this.ɵfac = function GridService_Factory(t) {\n    return new (t || GridService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GridService,\n    factory: GridService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","GridService","constructor","cells","cellsUpdated","getCells","setCells","emit","getCell","idCell","resetCells","forEach","cell","isAlive","gridIsEmpty","every","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\services\\grid.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { Cell } from '../models/cell.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridService {\n  private cells: Cell[] = [];\n  cellsUpdated = new EventEmitter<Cell[]>();\n\n  constructor() { }\n\n  getCells(): Cell[] {\n    return this.cells;\n  }\n  setCells(cells: Cell[]) {\n    this.cells = cells;\n    this.cellsUpdated.emit(cells)\n  }\n\n  getCell(idCell: number): Cell {\n    return this.cells[idCell - 1];\n  }\n\n  resetCells() {\n    this.cells.forEach(cell => {\n      cell.isAlive = false\n    })\n  }\n\n  gridIsEmpty(): boolean {\n    return this.cells.every(cell => !cell.isAlive)\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAMxD,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,KAAK,GAAW,EAAE;IAC1B,KAAAC,YAAY,GAAG,IAAIJ,YAAY,EAAU;EAEzB;EAEhBK,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EACAG,QAAQA,CAACH,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,YAAY,CAACG,IAAI,CAACJ,KAAK,CAAC;EAC/B;EAEAK,OAAOA,CAACC,MAAc;IACpB,OAAO,IAAI,CAACN,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;EAC/B;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACP,KAAK,CAACQ,OAAO,CAACC,IAAI,IAAG;MACxBA,IAAI,CAACC,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACX,KAAK,CAACY,KAAK,CAACH,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC;EAChD;EAAC,QAAAG,CAAA,G;qBA1BUf,WAAW;EAAA;EAAA,QAAAgB,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}