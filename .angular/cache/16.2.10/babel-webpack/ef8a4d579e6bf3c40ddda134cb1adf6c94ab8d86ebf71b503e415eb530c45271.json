{"ast":null,"code":"export class Cell {\n  constructor(id, max) {\n    this.isAlive = false;\n    this.siblings = [];\n    this.id = id;\n    this.siblings = this.setSiblings(id, max);\n  }\n  setSiblings(id, max) {\n    const MAX_SQRT = Math.sqrt(max);\n    const DX_LIMIT = [];\n    const SX_LIMIT = [1];\n    for (let i = 1; i <= max; i++) {\n      if (i % MAX_SQRT === 0) {\n        DX_LIMIT.push(i);\n        SX_LIMIT.push(i + 1);\n      }\n    }\n    console.table([[\"Cell ID\", id], [\"DX_LIMIT\", DX_LIMIT], [\"SX_LIMIT\", SX_LIMIT]]);\n    /**\n     *  1 | 2 | 3\n     *  4 | X | 5\n     *  6 | 7 | 8\n     */\n    const SIMBLINGS = [id - 13, id - 12, id - 11, id - 1, id + 1, id + 11, id + 12, id + 13];\n    return SIMBLINGS.filter(sibling => sibling > 0 && sibling < max);\n  }\n}","map":{"version":3,"names":["Cell","constructor","id","max","isAlive","siblings","setSiblings","MAX_SQRT","Math","sqrt","DX_LIMIT","SX_LIMIT","i","push","console","table","SIMBLINGS","filter","sibling"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\models\\cell.model.ts"],"sourcesContent":["export class Cell {\r\n    id!: number;\r\n    isAlive: boolean = false;\r\n    siblings: number[] = []\r\n\r\n    constructor(id: number, max: number) {\r\n        this.id = id;\r\n        this.siblings = this.setSiblings(id, max);\r\n    }\r\n\r\n    setSiblings(id: number, max: number): number[] {\r\n        const MAX_SQRT = Math.sqrt(max);\r\n        const DX_LIMIT: number[] = [];\r\n        const SX_LIMIT: number[] = [1];\r\n\r\n        for (let i = 1; i <= max; i++) {\r\n            if (i % MAX_SQRT === 0) {\r\n                DX_LIMIT.push(i);\r\n                SX_LIMIT.push(i+1);\r\n            }\r\n        }\r\n\r\n        console.table([\r\n            [\"Cell ID\", id],\r\n            [\"DX_LIMIT\", DX_LIMIT],\r\n            [\"SX_LIMIT\", SX_LIMIT],\r\n        ])\r\n        /**\r\n         *  1 | 2 | 3\r\n         *  4 | X | 5\r\n         *  6 | 7 | 8\r\n         */\r\n\r\n        const SIMBLINGS: number[] = [\r\n            id - 13, id - 12, id - 11,\r\n            id - 1, id + 1,\r\n            id + 11, id + 12, id + 13,\r\n        ];\r\n\r\n        return SIMBLINGS.filter(sibling => sibling > 0 && sibling < max);\r\n    }\r\n}"],"mappings":"AAAA,OAAM,MAAOA,IAAI;EAKbC,YAAYC,EAAU,EAAEC,GAAW;IAHnC,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,QAAQ,GAAa,EAAE;IAGnB,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACJ,EAAE,EAAEC,GAAG,CAAC;EAC7C;EAEAG,WAAWA,CAACJ,EAAU,EAAEC,GAAW;IAC/B,MAAMI,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,GAAG,CAAC;IAC/B,MAAMO,QAAQ,GAAa,EAAE;IAC7B,MAAMC,QAAQ,GAAa,CAAC,CAAC,CAAC;IAE9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,GAAG,EAAES,CAAC,EAAE,EAAE;MAC3B,IAAIA,CAAC,GAAGL,QAAQ,KAAK,CAAC,EAAE;QACpBG,QAAQ,CAACG,IAAI,CAACD,CAAC,CAAC;QAChBD,QAAQ,CAACE,IAAI,CAACD,CAAC,GAAC,CAAC,CAAC;;;IAI1BE,OAAO,CAACC,KAAK,CAAC,CACV,CAAC,SAAS,EAAEb,EAAE,CAAC,EACf,CAAC,UAAU,EAAEQ,QAAQ,CAAC,EACtB,CAAC,UAAU,EAAEC,QAAQ,CAAC,CACzB,CAAC;IACF;;;;;IAMA,MAAMK,SAAS,GAAa,CACxBd,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EACzBA,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EACdA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,CAC5B;IAED,OAAOc,SAAS,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGf,GAAG,CAAC;EACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}