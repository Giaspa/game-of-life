{"ast":null,"code":"import { Utilities } from 'src/app/utilities';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/grid.service\";\nimport * as i2 from \"src/app/services/settings.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../gol-cell/gol-cell.component\";\nfunction GolGridComponent_gol_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"gol-cell\", 2);\n  }\n  if (rf & 2) {\n    const cell_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"cell\", cell_r1);\n  }\n}\nexport class GolGridComponent {\n  constructor(gridService, settingsService) {\n    this.gridService = gridService;\n    this.settingsService = settingsService;\n    this.cells = [];\n  }\n  ngOnInit() {\n    this.cells = this.gridService.getCells();\n    this.cellsSubscription = this.gridService.cellsUpdated.subscribe(updatedCells => {\n      this.cells = updatedCells;\n    });\n  }\n  setStyleGrid() {\n    const ROWS = this.settingsService.getRows();\n    return {\n      gridTemplateColumns: `repeat(${ROWS}, 1fr)`,\n      gap: `${Utilities.setGap(ROWS)}px`\n    };\n  }\n  static #_ = this.ɵfac = function GolGridComponent_Factory(t) {\n    return new (t || GolGridComponent)(i0.ɵɵdirectiveInject(i1.GridService), i0.ɵɵdirectiveInject(i2.SettingsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GolGridComponent,\n    selectors: [[\"gol-grid\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"ngStyle\"], [\"state\", \"death\", 3, \"cell\", 4, \"ngFor\", \"ngForOf\"], [\"state\", \"death\", 3, \"cell\"]],\n    template: function GolGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, GolGridComponent_gol_cell_1_Template, 1, 1, \"gol-cell\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", ctx.setStyleGrid());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cells);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgStyle, i4.GolCellComponent],\n    styles: [\"div[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 80vmin;\\n  aspect-ratio: 1;\\n  display: grid;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nb2wtZ3JpZC9nb2wtZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJkaXZ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDgwdm1pbjtcclxuICAgIGFzcGVjdC1yYXRpbzogMTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Utilities","i0","ɵɵelement","ɵɵproperty","cell_r1","GolGridComponent","constructor","gridService","settingsService","cells","ngOnInit","getCells","cellsSubscription","cellsUpdated","subscribe","updatedCells","setStyleGrid","ROWS","getRows","gridTemplateColumns","gap","setGap","_","ɵɵdirectiveInject","i1","GridService","i2","SettingsService","_2","selectors","decls","vars","consts","template","GolGridComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","GolGridComponent_gol_cell_1_Template","ɵɵelementEnd","ɵɵadvance"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\components\\gol-grid\\gol-grid.component.ts","C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\components\\gol-grid\\gol-grid.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GridService } from 'src/app/services/grid.service';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { Utilities } from 'src/app/utilities';\n\n@Component({\n  selector: 'gol-grid',\n  templateUrl: './gol-grid.component.html',\n  styleUrls: ['./gol-grid.component.scss']\n})\nexport class GolGridComponent implements OnInit {\n  cells: any[] = [];\n  private cellsSubscription!: Subscription;\n\n  constructor(\n    private readonly gridService: GridService,\n    private readonly settingsService: SettingsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.cells = this.gridService.getCells();\n    this.cellsSubscription = this.gridService.cellsUpdated.subscribe(updatedCells => {\n      this.cells = updatedCells;\n    })\n  }\n\n  setStyleGrid() {\n    const ROWS = this.settingsService.getRows();\n\n    return {\n      gridTemplateColumns: `repeat(${ROWS}, 1fr)`,\n      gap: `${Utilities.setGap(ROWS)}px`\n    }\n  }\n\n}\n","<div [ngStyle]=\"setStyleGrid()\">\n    <gol-cell *ngFor=\"let cell of cells; let i = index\"  state=\"death\" [cell]=\"cell\"></gol-cell>\n</div> "],"mappings":"AAIA,SAASA,SAAS,QAAQ,mBAAmB;;;;;;;;ICHzCC,EAAA,CAAAC,SAAA,kBAA4F;;;;IAAzBD,EAAA,CAAAE,UAAA,SAAAC,OAAA,CAAa;;;ADUpF,OAAM,MAAOC,gBAAgB;EAI3BC,YACmBC,WAAwB,EACxBC,eAAgC;IADhC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,eAAe,GAAfA,eAAe;IALlC,KAAAC,KAAK,GAAU,EAAE;EAMb;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAG,IAAI,CAACF,WAAW,CAACI,QAAQ,EAAE;IACxC,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACL,WAAW,CAACM,YAAY,CAACC,SAAS,CAACC,YAAY,IAAG;MAC9E,IAAI,CAACN,KAAK,GAAGM,YAAY;IAC3B,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAAA;IACV,MAAMC,IAAI,GAAG,IAAI,CAACT,eAAe,CAACU,OAAO,EAAE;IAE3C,OAAO;MACLC,mBAAmB,EAAE,UAAUF,IAAI,QAAQ;MAC3CG,GAAG,EAAE,GAAGpB,SAAS,CAACqB,MAAM,CAACJ,IAAI,CAAC;KAC/B;EACH;EAAC,QAAAK,CAAA,G;qBAvBUjB,gBAAgB,EAAAJ,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxB,EAAA,CAAAsB,iBAAA,CAAAG,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBvB,gBAAgB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX7BlC,EAAA,CAAAoC,cAAA,aAAgC;QAC5BpC,EAAA,CAAAqC,UAAA,IAAAC,oCAAA,sBAA4F;QAChGtC,EAAA,CAAAuC,YAAA,EAAM;;;QAFDvC,EAAA,CAAAE,UAAA,YAAAiC,GAAA,CAAApB,YAAA,GAA0B;QACAf,EAAA,CAAAwC,SAAA,GAAU;QAAVxC,EAAA,CAAAE,UAAA,YAAAiC,GAAA,CAAA3B,KAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}