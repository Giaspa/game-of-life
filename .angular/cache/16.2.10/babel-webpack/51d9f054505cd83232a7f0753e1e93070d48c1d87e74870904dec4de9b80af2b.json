{"ast":null,"code":"import { Cell } from './models/cell.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/settings.service\";\nimport * as i2 from \"./services/grid.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./components/gol-grid/gol-grid.component\";\nimport * as i5 from \"./components/gol-header/gol-header.component\";\nimport * as i6 from \"./components/gol-pattern/gol-pattern.component\";\nfunction AppComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_5_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n      const _r1 = i0.ɵɵreference(7);\n      return i0.ɵɵresetView(_r1.modal.open());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 6);\n    i0.ɵɵelement(2, \"path\", 7);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AppComponent {\n  constructor(settingsService, gridService) {\n    this.settingsService = settingsService;\n    this.gridService = gridService;\n    this.title = 'game-of-life';\n  }\n  ngOnInit() {\n    this.createCells();\n    this.rowsSubscription = this.settingsService.rowsUpdated.subscribe(updatedRows => {\n      this.createCells();\n    });\n  }\n  createCells() {\n    const ROWS = this.settingsService.getRows();\n    const GRID_CELLS = ROWS * ROWS;\n    const CELLS = [];\n    for (let i = 0; i < GRID_CELLS; i++) {\n      CELLS.push(new Cell(i + 1, GRID_CELLS));\n    }\n    this.gridService.setCells(CELLS);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SettingsService), i0.ɵɵdirectiveInject(i2.GridService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"container--header\"], [1, \"container--grid\"], [\"class\", \"pattern\", 3, \"click\", 4, \"ngIf\"], [\"pattern\", \"\"], [1, \"pattern\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"3em\", \"viewBox\", \"0 0 576 512\"], [\"d\", \"M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"gol-header\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"gol-grid\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, AppComponent_div_5_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelement(6, \"gol-pattern\", null, 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.gridService.gridIsEmpty());\n      }\n    },\n    dependencies: [i3.NgIf, i4.GolGridComponent, i5.GolHeaderComponent, i6.GolPatternComponent],\n    styles: [\"[_ngcontent-%COMP%]:root {\\n  --dark-blue: #162F3F;\\n}\\n\\ndiv.container[_ngcontent-%COMP%] {\\n  background-color: #c7d6d0;\\n  position: relative;\\n  padding: 10px;\\n  margin: 20px;\\n  display: flex;\\n  gap: 10px;\\n  flex-direction: column;\\n  border-radius: 10px;\\n}\\ndiv[_ngcontent-%COMP%]    > .container--header[_ngcontent-%COMP%] {\\n  background-color: #47682D;\\n  padding: 5px;\\n  border-radius: 3px;\\n}\\ndiv[_ngcontent-%COMP%]    > .container--grid[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BO0VBQ0ksb0JBQUE7QUNOSjs7QUFDSTtFQUNJLHlCREZBO0VDR0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxTQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQUVSO0FBQ0k7RUFDSSx5QkRYSztFQ1lMLFlBQUE7RUFDQSxrQkFBQTtBQUNSO0FBRUk7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7QUFBUiIsInNvdXJjZXNDb250ZW50IjpbIiRkYXJrLWJsdWU6ICMxNzMwNDA7XHJcbiRibHVlOiAjMjI2MDcxO1xyXG4kbGlnaHQ6ICNjN2Q2ZDA7XHJcbiRncmVlbjogIzc4QTYzRDtcclxuJGRhcmstZ3JlZW46ICM0NzY4MkQ7XHJcbiRibGFjazogIzFjMWMxYztcclxuXHJcbjpyb290e1xyXG4gICAgLS1kYXJrLWJsdWU6ICMxNjJGM0Y7XHJcbn0iLCJAaW1wb3J0ICcuLi9hc3NldHMuc2Nzcyc7XHJcblxyXG5kaXYge1xyXG4gICAgJi5jb250YWluZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBtYXJnaW46IDIwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBnYXA6IDEwcHg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICY+LmNvbnRhaW5lci0taGVhZGVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFyay1ncmVlbjtcclxuICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgfVxyXG5cclxuICAgICY+LmNvbnRhaW5lci0tZ3JpZCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Cell","i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_5_Template_div_click_0_listener","ɵɵrestoreView","_r3","ɵɵnextContext","_r1","ɵɵreference","ɵɵresetView","modal","open","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","AppComponent","constructor","settingsService","gridService","title","ngOnInit","createCells","rowsSubscription","rowsUpdated","subscribe","updatedRows","ROWS","getRows","GRID_CELLS","CELLS","i","push","setCells","_","ɵɵdirectiveInject","i1","SettingsService","i2","GridService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_5_Template","ɵɵadvance","ɵɵproperty","gridIsEmpty"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\app.component.ts","C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Cell } from './models/cell.model';\r\nimport { SettingsService } from './services/settings.service';\r\nimport { GridService } from './services/grid.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'game-of-life';\r\n  private rowsSubscription!: Subscription;\r\n\r\n  constructor(\r\n    private readonly settingsService: SettingsService,\r\n    readonly gridService: GridService,\r\n    ){}\r\n\r\n  ngOnInit(): void {\r\n    this.createCells();\r\n    this.rowsSubscription = this.settingsService.rowsUpdated.subscribe(updatedRows => {\r\n      this.createCells();\r\n    })\r\n  }\r\n\r\n  createCells() {\r\n    const ROWS = this.settingsService.getRows();\r\n    const GRID_CELLS: number = ROWS*ROWS;\r\n    const CELLS: Cell[] = [];\r\n\r\n    for (let i = 0; i < GRID_CELLS; i++) {\r\n      CELLS.push(new Cell(i+1, GRID_CELLS));\r\n    }\r\n\r\n    this.gridService.setCells(CELLS);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"container--header\">\r\n        <gol-header></gol-header>\r\n    </div>\r\n\r\n    <div class=\"container--grid\">\r\n        <gol-grid></gol-grid>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"pattern\" *ngIf=\"gridService.gridIsEmpty()\" (click)=\"pattern.modal.open()\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3em\" viewBox=\"0 0 576 512\">\r\n        <!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->\r\n        <path\r\n            d=\"M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z\" />\r\n    </svg>\r\n</div>\r\n\r\n<gol-pattern #pattern></gol-pattern>\r\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,qBAAqB;;;;;;;;;;;ICS1CC,EAAA,CAAAC,cAAA,aAAsF;IAA/BD,EAAA,CAAAE,UAAA,mBAAAC,iDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAAL,EAAA,CAAAM,aAAA;MAAA,MAAAC,GAAA,GAAAP,EAAA,CAAAQ,WAAA;MAAA,OAASR,EAAA,CAAAS,WAAA,CAAAF,GAAA,CAAAG,KAAA,CAAAC,IAAA,EAAoB;IAAA,EAAC;IACjFX,EAAA,CAAAY,cAAA,EAA2E;IAA3EZ,EAAA,CAAAC,cAAA,aAA2E;IAEvED,EAAA,CAAAa,SAAA,cACyV;IAC7Vb,EAAA,CAAAc,YAAA,EAAM;;;ADJV,OAAM,MAAOC,YAAY;EAIvBC,YACmBC,eAAgC,EACxCC,WAAwB;IADhB,KAAAD,eAAe,GAAfA,eAAe;IACvB,KAAAC,WAAW,GAAXA,WAAW;IALtB,KAAAC,KAAK,GAAG,cAAc;EAMlB;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACL,eAAe,CAACM,WAAW,CAACC,SAAS,CAACC,WAAW,IAAG;MAC/E,IAAI,CAACJ,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAA,WAAWA,CAAA;IACT,MAAMK,IAAI,GAAG,IAAI,CAACT,eAAe,CAACU,OAAO,EAAE;IAC3C,MAAMC,UAAU,GAAWF,IAAI,GAACA,IAAI;IACpC,MAAMG,KAAK,GAAW,EAAE;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;MACnCD,KAAK,CAACE,IAAI,CAAC,IAAIhC,IAAI,CAAC+B,CAAC,GAAC,CAAC,EAAEF,UAAU,CAAC,CAAC;;IAGvC,IAAI,CAACV,WAAW,CAACc,QAAQ,CAACH,KAAK,CAAC;EAClC;EAAC,QAAAI,CAAA,G;qBA1BUlB,YAAY,EAAAf,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAApC,EAAA,CAAAkC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZxB,YAAY;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXzB9C,EAAA,CAAAC,cAAA,aAAuB;QAEfD,EAAA,CAAAa,SAAA,iBAAyB;QAC7Bb,EAAA,CAAAc,YAAA,EAAM;QAENd,EAAA,CAAAC,cAAA,aAA6B;QACzBD,EAAA,CAAAa,SAAA,eAAqB;QACzBb,EAAA,CAAAc,YAAA,EAAM;QAGVd,EAAA,CAAAgD,UAAA,IAAAC,2BAAA,iBAMM;QAENjD,EAAA,CAAAa,SAAA,2BAAoC;;;QARdb,EAAA,CAAAkD,SAAA,GAA+B;QAA/BlD,EAAA,CAAAmD,UAAA,SAAAJ,GAAA,CAAA7B,WAAA,CAAAkC,WAAA,GAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}