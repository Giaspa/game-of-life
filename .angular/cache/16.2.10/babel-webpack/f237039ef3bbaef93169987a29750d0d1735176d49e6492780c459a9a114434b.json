{"ast":null,"code":"export class Cell {\n  constructor(id, max) {\n    this.isAlive = false;\n    this.siblings = [];\n    this.id = id;\n    this.siblings = this.setSiblings(id, max);\n  }\n  setSiblings(id, max) {\n    /**\n     *  P_1 | P_2 | P_3\n     *  P_4 |  X  | P_5\n     *  P_6 | P_7 | P_8\n     */\n    const [P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8] = [id - 13, id - 12, id - 11, id - 1, id + 1, id + 11, id + 12, id + 13];\n    const MAX_SQRT = Math.sqrt(max);\n    const DX_LIMIT = [];\n    const SX_LIMIT = [1];\n    let siglings = [P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8];\n    for (let i = 1; i <= max; i++) {\n      if (i % MAX_SQRT === 0) {\n        DX_LIMIT.push(i);\n        SX_LIMIT.push(i + 1);\n      }\n    }\n    if (SX_LIMIT.includes(id)) {\n      siglings = [0, P_2, P_3, 0, P_5, 0, P_7, P_8];\n    } else if (DX_LIMIT.includes(id)) {\n      siglings = [P_1, P_2, 0, P_4, 0, P_6, P_7, 0];\n    }\n    return siglings.filter(sibling => sibling > 0 && sibling < max);\n  }\n}","map":{"version":3,"names":["Cell","constructor","id","max","isAlive","siblings","setSiblings","P_1","P_2","P_3","P_4","P_5","P_6","P_7","P_8","MAX_SQRT","Math","sqrt","DX_LIMIT","SX_LIMIT","siglings","i","push","includes","filter","sibling"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\models\\cell.model.ts"],"sourcesContent":["export class Cell {\r\n    id!: number;\r\n    isAlive: boolean = false;\r\n    siblings: number[] = []\r\n\r\n    constructor(id: number, max: number) {\r\n        this.id = id;\r\n        this.siblings = this.setSiblings(id, max);\r\n    }\r\n\r\n    private setSiblings(id: number, max: number): number[] {\r\n        /**\r\n         *  P_1 | P_2 | P_3\r\n         *  P_4 |  X  | P_5\r\n         *  P_6 | P_7 | P_8\r\n         */\r\n        const [P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8] = [id - 13, id - 12, id - 11, id - 1, id + 1, id + 11, id + 12, id + 13,]\r\n        const MAX_SQRT = Math.sqrt(max);\r\n        const DX_LIMIT: number[] = [];\r\n        const SX_LIMIT: number[] = [1];\r\n        let siglings: number[] = [P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8]\r\n\r\n        for (let i = 1; i <= max; i++) {\r\n            if (i % MAX_SQRT === 0) {\r\n                DX_LIMIT.push(i);\r\n                SX_LIMIT.push(i + 1);\r\n            }\r\n        }\r\n\r\n        if (SX_LIMIT.includes(id)) {\r\n            siglings = [0, P_2, P_3, 0, P_5, 0, P_7, P_8]\r\n        } else if (DX_LIMIT.includes(id)) {\r\n            siglings = [P_1, P_2, 0, P_4, 0, P_6, P_7, 0]\r\n        }\r\n\r\n        return siglings.filter(sibling => sibling > 0 && sibling < max);\r\n    }\r\n}"],"mappings":"AAAA,OAAM,MAAOA,IAAI;EAKbC,YAAYC,EAAU,EAAEC,GAAW;IAHnC,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,QAAQ,GAAa,EAAE;IAGnB,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACJ,EAAE,EAAEC,GAAG,CAAC;EAC7C;EAEQG,WAAWA,CAACJ,EAAU,EAAEC,GAAW;IACvC;;;;;IAKA,MAAM,CAACI,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAG,CAACZ,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,EAAEA,EAAE,GAAG,EAAE,CAAE;IACxH,MAAMa,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACd,GAAG,CAAC;IAC/B,MAAMe,QAAQ,GAAa,EAAE;IAC7B,MAAMC,QAAQ,GAAa,CAAC,CAAC,CAAC;IAC9B,IAAIC,QAAQ,GAAa,CAACb,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC;IAEjE,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIlB,GAAG,EAAEkB,CAAC,EAAE,EAAE;MAC3B,IAAIA,CAAC,GAAGN,QAAQ,KAAK,CAAC,EAAE;QACpBG,QAAQ,CAACI,IAAI,CAACD,CAAC,CAAC;QAChBF,QAAQ,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;;;IAI5B,IAAIF,QAAQ,CAACI,QAAQ,CAACrB,EAAE,CAAC,EAAE;MACvBkB,QAAQ,GAAG,CAAC,CAAC,EAAEZ,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAEE,GAAG,EAAE,CAAC,EAAEE,GAAG,EAAEC,GAAG,CAAC;KAChD,MAAM,IAAII,QAAQ,CAACK,QAAQ,CAACrB,EAAE,CAAC,EAAE;MAC9BkB,QAAQ,GAAG,CAACb,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAEE,GAAG,EAAE,CAAC,EAAEE,GAAG,EAAEC,GAAG,EAAE,CAAC,CAAC;;IAGjD,OAAOO,QAAQ,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGtB,GAAG,CAAC;EACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}