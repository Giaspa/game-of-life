{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SettingsService {\n  constructor() {\n    this.rowsPerColumns = 144;\n    this.iterations = 100;\n    this.delay = 200;\n    this.isGameRunning = false;\n  }\n  setRowsPerColumns(rows) {\n    this.rowsPerColumns = rows;\n  }\n  getRowsPerColumns() {\n    return this.rowsPerColumns;\n  }\n  setIterations(iterations) {\n    this.iterations = iterations;\n  }\n  getIterations() {\n    return this.iterations;\n  }\n  setDelay(delay) {\n    this.delay = delay;\n  }\n  getDelay() {\n    return this.delay;\n  }\n  setIsGameRunning(isGameRunning) {\n    this.isGameRunning = isGameRunning;\n  }\n  getIsGameRunning() {\n    return this.isGameRunning;\n  }\n  static #_ = this.ɵfac = function SettingsService_Factory(t) {\n    return new (t || SettingsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SettingsService,\n    factory: SettingsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SettingsService","constructor","rowsPerColumns","iterations","delay","isGameRunning","setRowsPerColumns","rows","getRowsPerColumns","setIterations","getIterations","setDelay","getDelay","setIsGameRunning","getIsGameRunning","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\services\\settings.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  private rowsPerColumns: number = 144;\n  private iterations: number = 100;\n  private delay: number = 200;\n  private isGameRunning: boolean = false;\n\n  constructor() { }\n\n  setRowsPerColumns(rows: number){\n    this.rowsPerColumns = rows;\n  }\n\n  getRowsPerColumns(): number {\n    return this.rowsPerColumns\n  }\n\n  setIterations(iterations: number){\n    this.iterations = iterations;\n  }\n\n  getIterations(): number {\n    return this.iterations\n  }\n\n  setDelay(delay: number){\n    this.delay = delay;\n  }\n\n  getDelay(): number {\n    return this.delay\n  }\n\n  setIsGameRunning(isGameRunning: boolean){\n    this.isGameRunning = isGameRunning;\n  }\n\n  getIsGameRunning(): boolean {\n    return this.isGameRunning\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAM1BC,YAAA;IALQ,KAAAC,cAAc,GAAW,GAAG;IAC5B,KAAAC,UAAU,GAAW,GAAG;IACxB,KAAAC,KAAK,GAAW,GAAG;IACnB,KAAAC,aAAa,GAAY,KAAK;EAEtB;EAEhBC,iBAAiBA,CAACC,IAAY;IAC5B,IAAI,CAACL,cAAc,GAAGK,IAAI;EAC5B;EAEAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACN,cAAc;EAC5B;EAEAO,aAAaA,CAACN,UAAkB;IAC9B,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEAO,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,UAAU;EACxB;EAEAQ,QAAQA,CAACP,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAQ,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,KAAK;EACnB;EAEAS,gBAAgBA,CAACR,aAAsB;IACrC,IAAI,CAACA,aAAa,GAAGA,aAAa;EACpC;EAEAS,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACT,aAAa;EAC3B;EAAC,QAAAU,CAAA,G;qBAtCUf,eAAe;EAAA;EAAA,QAAAgB,EAAA,G;WAAfhB,eAAe;IAAAiB,OAAA,EAAfjB,eAAe,CAAAkB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}