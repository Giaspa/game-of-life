{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/grid.service\";\nimport * as i2 from \"src/app/services/settings.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../gol-cell/gol-cell.component\";\nfunction GolGridComponent_gol_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"gol-cell\", 2);\n  }\n  if (rf & 2) {\n    const cell_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"cell\", cell_r1);\n  }\n}\nconst _c0 = function () {\n  return {\n    gridTemplateColumns: \"repeat(12, 1fr)\"\n  };\n};\nexport class GolGridComponent {\n  constructor(gridService, settingsService) {\n    this.gridService = gridService;\n    this.settingsService = settingsService;\n    this.cells = [];\n  }\n  ngOnInit() {\n    this.cells = this.gridService.getCells();\n    this.cellsSubscription = this.gridService.cellsUpdated.subscribe(updatedCells => {\n      this.cells = updatedCells;\n    });\n  }\n  setStyleGrid() {\n    return {\n      gridTemplateColumns: `repeat(${this.settingsService.getRows()}, 1fr)`\n    };\n  }\n  static #_ = this.ɵfac = function GolGridComponent_Factory(t) {\n    return new (t || GolGridComponent)(i0.ɵɵdirectiveInject(i1.GridService), i0.ɵɵdirectiveInject(i2.SettingsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GolGridComponent,\n    selectors: [[\"gol-grid\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"ngStyle\"], [\"state\", \"death\", 3, \"cell\", 4, \"ngFor\", \"ngForOf\"], [\"state\", \"death\", 3, \"cell\"]],\n    template: function GolGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, GolGridComponent_gol_cell_1_Template, 1, 1, \"gol-cell\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(2, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cells);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgStyle, i4.GolCellComponent],\n    styles: [\"div[_ngcontent-%COMP%] {\\n  position: relative;\\n  height: 80vmin;\\n  aspect-ratio: 1;\\n  display: grid;\\n  gap: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nb2wtZ3JpZC9nb2wtZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsUUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiA4MHZtaW47XHJcbiAgICBhc3BlY3QtcmF0aW86IDE7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ2FwOiAzcHhcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","cell_r1","GolGridComponent","constructor","gridService","settingsService","cells","ngOnInit","getCells","cellsSubscription","cellsUpdated","subscribe","updatedCells","setStyleGrid","gridTemplateColumns","getRows","_","ɵɵdirectiveInject","i1","GridService","i2","SettingsService","_2","selectors","decls","vars","consts","template","GolGridComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","GolGridComponent_gol_cell_1_Template","ɵɵelementEnd","ɵɵpureFunction0","_c0","ɵɵadvance"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\components\\gol-grid\\gol-grid.component.ts","C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\components\\gol-grid\\gol-grid.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GridService } from 'src/app/services/grid.service';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'gol-grid',\n  templateUrl: './gol-grid.component.html',\n  styleUrls: ['./gol-grid.component.scss']\n})\nexport class GolGridComponent implements OnInit{\n  cells: any[] = [];\n  private cellsSubscription!: Subscription;\n\n  constructor(\n    private readonly gridService: GridService,\n    private readonly settingsService: SettingsService,\n  ){}\n\n  ngOnInit(): void {\n    this.cells = this.gridService.getCells();\n    this.cellsSubscription = this.gridService.cellsUpdated.subscribe(updatedCells => {\n      this.cells = updatedCells;\n    })\n  }\n\n  setStyleGrid(){\n    return {gridTemplateColumns: `repeat(${this.settingsService.getRows()}, 1fr)`}\n  }\n\n}\n","<div [ngStyle]=\"{gridTemplateColumns: 'repeat(12, 1fr)'}\">\n    <gol-cell *ngFor=\"let cell of cells; let i = index\"  state=\"death\" [cell]=\"cell\"></gol-cell>\n</div> "],"mappings":";;;;;;;ICCIA,EAAA,CAAAC,SAAA,kBAA4F;;;;IAAzBD,EAAA,CAAAE,UAAA,SAAAC,OAAA,CAAa;;;;;;;;ADSpF,OAAM,MAAOC,gBAAgB;EAI3BC,YACmBC,WAAwB,EACxBC,eAAgC;IADhC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,eAAe,GAAfA,eAAe;IALlC,KAAAC,KAAK,GAAU,EAAE;EAMf;EAEFC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAG,IAAI,CAACF,WAAW,CAACI,QAAQ,EAAE;IACxC,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACL,WAAW,CAACM,YAAY,CAACC,SAAS,CAACC,YAAY,IAAG;MAC9E,IAAI,CAACN,KAAK,GAAGM,YAAY;IAC3B,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAAA;IACV,OAAO;MAACC,mBAAmB,EAAE,UAAU,IAAI,CAACT,eAAe,CAACU,OAAO,EAAE;IAAQ,CAAC;EAChF;EAAC,QAAAC,CAAA,G;qBAlBUd,gBAAgB,EAAAJ,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAArB,EAAA,CAAAmB,iBAAA,CAAAG,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBpB,gBAAgB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV7B/B,EAAA,CAAAiC,cAAA,aAA0D;QACtDjC,EAAA,CAAAkC,UAAA,IAAAC,oCAAA,sBAA4F;QAChGnC,EAAA,CAAAoC,YAAA,EAAM;;;QAFDpC,EAAA,CAAAE,UAAA,YAAAF,EAAA,CAAAqC,eAAA,IAAAC,GAAA,EAAoD;QAC1BtC,EAAA,CAAAuC,SAAA,GAAU;QAAVvC,EAAA,CAAAE,UAAA,YAAA8B,GAAA,CAAAxB,KAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}