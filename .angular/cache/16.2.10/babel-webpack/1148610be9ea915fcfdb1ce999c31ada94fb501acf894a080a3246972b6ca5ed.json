{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class SettingsService {\n  constructor() {\n    this.rows = 24;\n    this.rowsUpdated = new EventEmitter();\n    this.iterations = 100;\n    this.delay = 200;\n    this.isGameRunning = false;\n  }\n  setRows(rows) {\n    this.rows = rows;\n    this.rowsUpdated.emit(rows);\n  }\n  getRows() {\n    return this.rows;\n  }\n  setIterations(iterations) {\n    this.iterations = iterations;\n  }\n  getIterations() {\n    return this.iterations;\n  }\n  setDelay(delay) {\n    this.delay = delay;\n  }\n  getDelay() {\n    return this.delay;\n  }\n  setIsGameRunning(isGameRunning) {\n    this.isGameRunning = isGameRunning;\n  }\n  getIsGameRunning() {\n    return this.isGameRunning;\n  }\n  static #_ = this.ɵfac = function SettingsService_Factory(t) {\n    return new (t || SettingsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SettingsService,\n    factory: SettingsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","SettingsService","constructor","rows","rowsUpdated","iterations","delay","isGameRunning","setRows","emit","getRows","setIterations","getIterations","setDelay","getDelay","setIsGameRunning","getIsGameRunning","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\game-of-life\\src\\app\\services\\settings.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  private rows: number = 24;\n  rowsUpdated = new EventEmitter<number>();\n  private iterations: number = 100;\n  private delay: number = 200;\n  private isGameRunning: boolean = false;\n\n  constructor() { }\n\n  setRows(rows: number){\n    this.rows = rows;\n    this.rowsUpdated.emit(rows);\n  }\n\n  getRows(): number {\n    return this.rows\n  }\n\n  setIterations(iterations: number){\n    this.iterations = iterations;\n  }\n\n  getIterations(): number {\n    return this.iterations\n  }\n\n  setDelay(delay: number){\n    this.delay = delay;\n  }\n\n  getDelay(): number {\n    return this.delay\n  }\n\n  setIsGameRunning(isGameRunning: boolean){\n    this.isGameRunning = isGameRunning;\n  }\n\n  getIsGameRunning(): boolean {\n    return this.isGameRunning\n  }\n\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAKxD,OAAM,MAAOC,eAAe;EAO1BC,YAAA;IANQ,KAAAC,IAAI,GAAW,EAAE;IACzB,KAAAC,WAAW,GAAG,IAAIJ,YAAY,EAAU;IAChC,KAAAK,UAAU,GAAW,GAAG;IACxB,KAAAC,KAAK,GAAW,GAAG;IACnB,KAAAC,aAAa,GAAY,KAAK;EAEtB;EAEhBC,OAAOA,CAACL,IAAY;IAClB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,CAACK,IAAI,CAACN,IAAI,CAAC;EAC7B;EAEAO,OAAOA,CAAA;IACL,OAAO,IAAI,CAACP,IAAI;EAClB;EAEAQ,aAAaA,CAACN,UAAkB;IAC9B,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEAO,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,UAAU;EACxB;EAEAQ,QAAQA,CAACP,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAQ,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,KAAK;EACnB;EAEAS,gBAAgBA,CAACR,aAAsB;IACrC,IAAI,CAACA,aAAa,GAAGA,aAAa;EACpC;EAEAS,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACT,aAAa;EAC3B;EAAC,QAAAU,CAAA,G;qBAxCUhB,eAAe;EAAA;EAAA,QAAAiB,EAAA,G;WAAfjB,eAAe;IAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}