{"ast":null,"code":"import { inject } from '@angular/core';\nimport { GridService } from './grid.service';\nimport * as i0 from \"@angular/core\";\nexport let CellService = /*#__PURE__*/(() => {\n  class CellService {\n    constructor() {\n      this.gridService = inject(GridService);\n    }\n    evaluateSiblingsState(cell) {\n      return cell.siblings.map(sibling => {\n        return this.gridService.getCell(sibling).isAlive;\n      });\n    }\n    getCellSurvivalRules(cell) {\n      const SIBLINGS_ALIVE = this.evaluateSiblingsState(cell).filter(sib => sib).length;\n      const CELL_ALIVE = cell.isAlive;\n      if (CELL_ALIVE && [2, 3].includes(SIBLINGS_ALIVE)) {\n        return 'alive';\n      }\n      if (!CELL_ALIVE && SIBLINGS_ALIVE === 3) {\n        return 'alive';\n      }\n      return 'death';\n    }\n    static #_ = this.ɵfac = function CellService_Factory(t) {\n      return new (t || CellService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CellService,\n      factory: CellService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CellService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}